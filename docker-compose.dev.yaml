version: "3"
services:
  redis:
    image: redis:7.2.1-alpine
    container_name: redis
    networks:
      - keepers-network

  mongodb:
    image: mongo:7.0.2-jammy
    container_name: mongodb
    restart: unless-stopped
    volumes:
      - mongodb_data:/data/db
    networks:
      - keepers-network
    env_file:
      - .env

  analytics-server:
    image: rai-analytics-server
    container_name: rai-analytics-server
    build: lib/rai-analytics-server/.
    depends_on:
      - redis
    env_file:
      - .env
    networks:
      - keepers-network

  manager-client:
    image: manager-client
    container_name: manager-client
    build:
      context: lib/client/.
      dockerfile: Dockerfile
    command: npm run start
    expose:
      - "3000"
    networks:
      - keepers-network
    env_file:
      - .env

  manager-server:
    image: manager-server
    container_name: manager-server
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    volumes:
      - ./src:/manager/src
      - ./nodemon.json:/manager/src/nodemon.json
      - ./files:/manager/files
      - /var/run/docker.sock:/var/run/docker.sock
      - ./logs:/app/logs
    depends_on:
      - redis
      - mongodb
    expose:
      - "4000"
    command: npm run start:dev
    networks:
      - keepers-network
    env_file:
      - .env

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.17.0
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./logs:/app/logs
    command: ["filebeat", "-e", "-c", "/usr/share/filebeat/filebeat.yml"]
    env_file:
      - .env

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: on-failure
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - keepers-network

networks:
  keepers-network:

volumes:
  mongodb_data:
